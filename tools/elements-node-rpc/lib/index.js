var jsonrpc = require('./jsonrpc')

class Client {
    constructor(opts) {
        this.mClient = new jsonrpc.Client(opts);
    }

    printHelp(command) {
        this.help(command).then((result) => {
            console.info(result);
        });
    }

    help(command) {
        if (command) {
            return Promise.resolve(this.mClient.call("help", [command]));
        }

        return Promise.resolve(this.mClient.call("help"));
    }

    stop() {
        return Promise.resolve(this.mClient.call("stop"));
    }

    getInfo() {
        return Promise.resolve(this.mClient.call("getinfo"));
    }

    getMemoryInfo() {
        return Promise.resolve(this.mClient.call("getmemoryinfo"));
    }


    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    //
    // Returns the hash of the best (tip) block in the longest blockchain.
    //
    // Result:
    //   "hex"    (string) the block hash hex encoded
    //
    // --------------------------------------------------------------------------------------------
    getBestBlockHash() {
        return Promise.resolve(this.mClient.call("getbestblockhash"));
    }


    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    //
    // If verbose is false, returns a string that is serialized, hex-encoded data for block 'hash'.
    // If verbose is true, returns an Object with information about block <hash>.
    // 
    // Arguments:
    //   1. blockhash    (string, required) The block hash
    //   2. verbose      (boolean, optional, default=true) true for a json object, false for the hex encoded data
    // 
    // Result(for verbose = true):
    // {
    //   "hash" : "hash",              (string) the block hash (same as provided)
    //   "confirmations" : n,          (numeric) The number of confirmations, or - 1 if the block is not on the main chain
    //   "size" : n,                   (numeric) The block size
    //   "strippedsize" : n,           (numeric) The block size excluding witness data
    //   "weight" : n                  (numeric) The block weight as defined in BIP 141
    //   "height" : n,                 (numeric) The block height or index
    //   "version" : n,                (numeric) The block version
    //   "versionHex" : "00000000",    (string) The block version formatted in hexadecimal
    //   "merkleroot" : "xxxx",        (string) The merkle root
    //   "tx" : [                      (array of string) The transaction ids
    //     "transactionid"             (string) The transaction id
    //     , ...
    //   ],
    //   "time" : ttt,                 (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)
    //   "mediantime" : ttt,           (numeric) The median block time in seconds since epoch (Jan 1 1970 GMT)
    //   "nonce" : n,                  (numeric) The nonce
    //   "bits" : "1d00ffff",          (string) The bits
    //   "difficulty" : x.xxx,         (numeric) The difficulty
    //   "chainwork" : "xxxx",         (string) Expected number of hashes required to produce the chain up to this block (in hex)
    //   "previousblockhash" : "hash", (string) The hash of the previous block
    //   "nextblockhash" : "hash"      (string) The hash of the next block
    // }
    // 
    // Result(for verbose= false):
    //   "data"    (string) A string that is serialized, hex - encoded data for block 'hash'.
    //
    // --------------------------------------------------------------------------------------------
    getBlock(blockHash, verbose) {
        var params = [blockHash];

        if (verbose != undefined)
            params.push(verbose);

        return Promise.resolve(this.mClient.call("getblock", params));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    //
    // Returns an object containing various state info regarding blockchain processing.
    //
    // Result:
    // {
    //   "chain": "xxxx",              (string) current network name as defined in BIP70 (main, test, regtest)
    //   "blocks": xxxxxx,             (numeric) the current number of blocks processed in the server
    //   "headers": xxxxxx,            (numeric) the current number of headers we have validated
    //   "bestblockhash": "...",       (string) the hash of the currently best block
    //   "difficulty": xxxxxx,         (numeric) the current difficulty
    //   "mediantime": xxxxxx,         (numeric) median time for the current best block
    //   "verificationprogress": xxxx, (numeric) estimate of verification progress [0..1]
    //   "chainwork": "xxxx"           (string) total amount of work in active chain, in hexadecimal
    //   "pruned": xx,                 (boolean) if the blocks are subject to pruning
    //   "pruneheight": xxxxxx,        (numeric) lowest-height complete block stored
    //   "softforks": [                (array) status of softforks in progress
    //      {
    //         "id": "xxxx",           (string) name of softfork
    //         "version": xx,          (numeric) block version
    //         "reject": {             (object) progress toward rejecting pre-softfork blocks
    //            "status": xx,        (boolean) true if threshold reached
    //         },
    //      }, ...
    //   ],
    //   "bip9_softforks": {           (object) status of BIP9 softforks in progress
    //      "xxxx" : {                 (string) name of the softfork
    //         "status": "xxxx",       (string) one of "defined", "started", "locked_in", "active", "failed"
    //         "bit": xx,              (numeric) the bit (0-28) in the block version field used to signal this softfork (only for "started" status)
    //         "startTime": xx,        (numeric) the minimum median time past of a block at which the bit gains its meaning
    //         "timeout": xx,          (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in
    //         "since": xx             (numeric) height of the first block to which the status applies
    //      }
    //   }
    // }
    //
    // --------------------------------------------------------------------------------------------
    getBlockChainInfo() {
        return Promise.resolve(this.mClient.call("getblockchaininfo"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    //
    // Returns the number of blocks in the longest blockchain.
    // 
    // Result:
    //   n    (numeric) The current block count
    //
    // --------------------------------------------------------------------------------------------
    getBlockCount() {
        return Promise.resolve(this.mClient.call("getblockcount"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // Returns hash of block in best-block-chain at height provided.
    // 
    // Arguments:
    //   1. height    (numeric, required) The height index
    // 
    // Result:
    //   "hash"    (string) The block hash
    // --------------------------------------------------------------------------------------------
    getBlockHash(height) {
        return Promise.resolve(this.mClient.call("getblockhash", [height]));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getBlockHeader() {
        return Promise.resolve(this.mClient.call("getBlockHeader"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getChainTips() {
        return Promise.resolve(this.mClient.call("getChainTips"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getDifficulty() {
        return Promise.resolve(this.mClient.call("getDifficulty"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getMempoolAncestors() {
        return Promise.resolve(this.mClient.call("getMempoolAncestors"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getMempoolDescendants() {
        return Promise.resolve(this.mClient.call("getMempoolDescendants"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getMempoolEntry() {
        return Promise.resolve(this.mClient.call("getMempoolEntry"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getMempoolInfo() {
        return Promise.resolve(this.mClient.call("getMempoolInfo"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getRawMempool() {
        return Promise.resolve(this.mClient.call("getRawMempool"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getTxOut() {
        return Promise.resolve(this.mClient.call("getTxOut"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getTxOutProof() {
        return Promise.resolve(this.mClient.call("getTxOutProof"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getTxOutSetInfo() {
        return Promise.resolve(this.mClient.call("getTxOutSetInfo"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    preciousBlock() {
        return Promise.resolve(this.mClient.call("preciousBlock"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    pruneBlockChain() {
        return Promise.resolve(this.mClient.call("pruneBlockChain"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    verifyChain() {
        return Promise.resolve(this.mClient.call("verifyChain"));
    }

    // --------------------------------------------------------------------------------------------
    // BLOCKCHAIN
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    verifytxOutProof() {
        return Promise.resolve(this.mClient.call("verifytxOutProof"));
    }


    // --------------------------------------------------------------------------------------------
    // GENERATING
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    combineBlockSigs() {
        return Promise.resolve(this.mClient.call("combineBlockSigs"));
    }

    // --------------------------------------------------------------------------------------------
    // GENERATING
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    generate() {
        return Promise.resolve(this.mClient.call("generate"));
    }

    // --------------------------------------------------------------------------------------------
    // GENERATING
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getNewBlockHex() {
        return Promise.resolve(this.mClient.call("getNewBlockHex"));
    }


    // --------------------------------------------------------------------------------------------
    // MINING
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getBlockTemplate() {
        return Promise.resolve(this.mClient.call("getBlockTemplate"));
    }

    // --------------------------------------------------------------------------------------------
    // MINING
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getMiningInfo() {
        return Promise.resolve(this.mClient.call("getMiningInfo"));
    }

    // --------------------------------------------------------------------------------------------
    // MINING
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getNetworkHashPS() {
        return Promise.resolve(this.mClient.call("getNetworkHashPS"));
    }

    // --------------------------------------------------------------------------------------------
    // MINING
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    prioritiseTransaction() {
        return Promise.resolve(this.mClient.call("prioritiseTransaction"));
    }

    // --------------------------------------------------------------------------------------------
    // MINING
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    submitBlock() {
        return Promise.resolve(this.mClient.call("submitBlock"));
    }

    // --------------------------------------------------------------------------------------------
    // MINING
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    testProposedBlock() {
        return Promise.resolve(this.mClient.call("testProposedBlock"));
    }


    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    addNode() {
        return Promise.resolve(this.mClient.call("addNode"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    clearBanned() {
        return Promise.resolve(this.mClient.call("clearBanned"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    disconnectNode() {
        return Promise.resolve(this.mClient.call("disconnectNode"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getAddedNodeInfo() {
        return Promise.resolve(this.mClient.call("getAddedNodeInfo"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getConnectionCount() {
        return Promise.resolve(this.mClient.call("getConnectionCount"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getNetTotals() {
        return Promise.resolve(this.mClient.call("getNetTotals"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getNetworkInfo() {
        return Promise.resolve(this.mClient.call("getNetworkInfo"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getPeerInfo() {
        return Promise.resolve(this.mClient.call("getPeerInfo"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    listBanned() {
        return Promise.resolve(this.mClient.call("listBanned"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    ping() {
        return Promise.resolve(this.mClient.call("ping"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    setBan() {
        return Promise.resolve(this.mClient.call("setBan"));
    }

    // --------------------------------------------------------------------------------------------
    // NETWORK
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    setNetworkActive() {
        return Promise.resolve(this.mClient.call("setNetworkActive"));
    }


    // --------------------------------------------------------------------------------------------
    // RAW TRANSACTIONS
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    blindRawTransaction() {
        return Promise.resolve(this.mClient.call("blindRawTransaction"));
    }

    // --------------------------------------------------------------------------------------------
    // RAW TRANSACTIONS
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    createRawTransaction() {
        return Promise.resolve(this.mClient.call("createRawTransaction"));
    }

    // --------------------------------------------------------------------------------------------
    // RAW TRANSACTIONS
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    decodeRawTransaction() {
        return Promise.resolve(this.mClient.call("decodeRawTransaction"));
    }

    // --------------------------------------------------------------------------------------------
    // RAW TRANSACTIONS
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    decodeScript() {
        return Promise.resolve(this.mClient.call("decodeScript"));
    }

    // --------------------------------------------------------------------------------------------
    // RAW TRANSACTIONS
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    fundRawTransaction() {
        return Promise.resolve(this.mClient.call("fundRawTransaction"));
    }

    // --------------------------------------------------------------------------------------------
    // RAW TRANSACTIONS
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getRawTransaction() {
        return Promise.resolve(this.mClient.call("getRawTransaction"));
    }

    // --------------------------------------------------------------------------------------------
    // RAW TRANSACTIONS
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    rawBlindRawTransaction() {
        return Promise.resolve(this.mClient.call("rawBlindRawTransaction"));
    }

    // --------------------------------------------------------------------------------------------
    // RAW TRANSACTIONS
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    sendRawTransaction() {
        return Promise.resolve(this.mClient.call("sendRawTransaction"));
    }

    // --------------------------------------------------------------------------------------------
    // RAW TRANSACTIONS
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    signRawTransaction() {
        return Promise.resolve(this.mClient.call("signRawTransaction"));
    }


    // --------------------------------------------------------------------------------------------
    // UTILITIES
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    createBlindedAddress() {
        return Promise.resolve(this.mClient.call("createBlindedAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // UTILITIES
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    createMultiSig() {
        return Promise.resolve(this.mClient.call("createMultiSig"));
    }

    // --------------------------------------------------------------------------------------------
    // UTILITIES
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    estimateFee() {
        return Promise.resolve(this.mClient.call("estimateFee"));
    }

    // --------------------------------------------------------------------------------------------
    // UTILITIES
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    estimatePriority() {
        return Promise.resolve(this.mClient.call("estimatePriority"));
    }

    // --------------------------------------------------------------------------------------------
    // UTILITIES
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    estimateSmartFee() {
        return Promise.resolve(this.mClient.call("estimateSmartFee"));
    }

    // --------------------------------------------------------------------------------------------
    // UTILITIES
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    estimateSmartPriority() {
        return Promise.resolve(this.mClient.call("estimateSmartPriority"));
    }

    // --------------------------------------------------------------------------------------------
    // UTILITIES
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    signMessageWithPrivKey() {
        return Promise.resolve(this.mClient.call("signMessageWithPrivKey"));
    }

    // --------------------------------------------------------------------------------------------
    // UTILITIES
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    validateAddress() {
        return Promise.resolve(this.mClient.call("validateAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // UTILITIES
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    verifyMessage() {
        return Promise.resolve(this.mClient.call("verifyMessage"));
    }


    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    abandonTransaction() {
        return Promise.resolve(this.mClient.call("abandonTransaction"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    addMultiSigAddress() {
        return Promise.resolve(this.mClient.call("addMultiSigAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    addWitnessAddress() {
        return Promise.resolve(this.mClient.call("addWitnessAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    backupWallet() {
        return Promise.resolve(this.mClient.call("backupWallet"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    claimPegin() {
        return Promise.resolve(this.mClient.call("claimPegin"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    destroyAmount() {
        return Promise.resolve(this.mClient.call("destroyAmount"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    dumpAssetLabels() {
        return Promise.resolve(this.mClient.call("dumpAssetLabels"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    dumpBlindingKey() {
        return Promise.resolve(this.mClient.call("dumpBlindingKey"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    dumpIssuanceBlindingKey() {
        return Promise.resolve(this.mClient.call("dumpIssuanceBlindingKey"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    dumpPrivKey() {
        return Promise.resolve(this.mClient.call("dumpPrivKey"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    dumpWallet() {
        return Promise.resolve(this.mClient.call("dumpWallet"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    encryptWallet() {
        return Promise.resolve(this.mClient.call("encryptWallet"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getAccount() {
        return Promise.resolve(this.mClient.call("getAccount"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getAccountAddress() {
        return Promise.resolve(this.mClient.call("getAccountAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getAddressesByAccount() {
        return Promise.resolve(this.mClient.call("getAddressesByAccount"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getBalance() {
        return Promise.resolve(this.mClient.call("getBalance"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getNewAddress() {
        return Promise.resolve(this.mClient.call("getNewAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getPeginAddress() {
        return Promise.resolve(this.mClient.call("getPeginAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getRawChangeAddress() {
        return Promise.resolve(this.mClient.call("getRawChangeAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getReceivedByAccount() {
        return Promise.resolve(this.mClient.call("getReceivedByAccount"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getReceivedByAddress() {
        return Promise.resolve(this.mClient.call("getReceivedByAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getTransaction() {
        return Promise.resolve(this.mClient.call("getTransaction"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getUnconfirmedBalance() {
        return Promise.resolve(this.mClient.call("getUnconfirmedBalance"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    getWalletInfo() {
        return Promise.resolve(this.mClient.call("getWalletInfo"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    importAddress() {
        return Promise.resolve(this.mClient.call("importAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    importBlindingKey() {
        return Promise.resolve(this.mClient.call("importBlindingKey"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    importIssuanceBlindingKey() {
        return Promise.resolve(this.mClient.call("importIssuanceBlindingKey"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    importMulti() {
        return Promise.resolve(this.mClient.call("importMulti"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    importPrivKey() {
        return Promise.resolve(this.mClient.call("importPrivKey"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    importPrunedFunds() {
        return Promise.resolve(this.mClient.call("importPrunedFunds"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    importPubKey() {
        return Promise.resolve(this.mClient.call("importPubKey"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    importWallet() {
        return Promise.resolve(this.mClient.call("importWallet"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    issueAsset() {
        return Promise.resolve(this.mClient.call("issueAsset"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    keypoolRefill() {
        return Promise.resolve(this.mClient.call("keypoolRefill"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    listAccounts() {
        return Promise.resolve(this.mClient.call("listAccounts"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    listAddressGroupings() {
        return Promise.resolve(this.mClient.call("listAddressGroupings"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    listIssuances() {
        return Promise.resolve(this.mClient.call("listIssuances"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    listLockUnspent() {
        return Promise.resolve(this.mClient.call("listLockUnspent"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    listReceivedByAccount() {
        return Promise.resolve(this.mClient.call("listReceivedByAccount"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    listReceivedByAddress() {
        return Promise.resolve(this.mClient.call("listReceivedByAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    listSinceBlock() {
        return Promise.resolve(this.mClient.call("listSinceBlock"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    listTransactions() {
        return Promise.resolve(this.mClient.call("listTransactions"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    listUnspent() {
        return Promise.resolve(this.mClient.call("listUnspent"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    lockUnspent() {
        return Promise.resolve(this.mClient.call("lockUnspent"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    reissueAsset() {
        return Promise.resolve(this.mClient.call("reissueAsset"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    removePrunedFunds() {
        return Promise.resolve(this.mClient.call("removePrunedFunds"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    sendMany() {
        return Promise.resolve(this.mClient.call("sendMany"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    sendToAddress() {
        return Promise.resolve(this.mClient.call("sendToAddress"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    sendToMainChain() {
        return Promise.resolve(this.mClient.call("sendToMainChain"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    setAccount() {
        return Promise.resolve(this.mClient.call("setAccount"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    setTxFee() {
        return Promise.resolve(this.mClient.call("setTxFee"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    signBlock() {
        return Promise.resolve(this.mClient.call("signBlock"));
    }

    // --------------------------------------------------------------------------------------------
    // WALLET
    // --------------------------------------------------------------------------------------------
    // 
    // --------------------------------------------------------------------------------------------
    signMessage() {
        return Promise.resolve(this.mClient.call("signMessage"));
    }
}

module.exports.Client = Client;